#+REVEAL_THEME: blood
#+options: num:nil toc:nil 
#+title: Job-scheduler program
#+author: Shreyas Ragavan
#+OPTIONS: reveal_control:t reveal_progress:t, reveal_history:t reveal_rolling_links:t reveal_keyboard:t reveal_overview:t


* [[https://github.com/shrysr/jobscheduler][Code On Github]]
* Introduction

This is a Python script for a portable, scalable job scheduler with
multiple priorities - for ANSYS CFX simulations. The script was
designed to be called every minute by an external scheduler
program. 

- In the practical case, the free version of the software [[https://www.splinterware.com/products/scheduler.html][System
  Scheduler]] was used to deploy the script successfully, for
over 3 years, managing 2 computing clusters.

Once called, the program basically loops through pre designated
folders and lists .def files based on the *last modified* date
available in Windows. The system interaction is via BASH scripts
created via the Python code, as well as the python OS library. There
are several in-built flags to support priority, pausing a particular
cluster, logging data and troubleshooting.

The idea behind the project was to create a multi-platform job
scheduler for ANSYS CFX that has a balance between sophistication and
ease of deployment (and management). Typically job schedulers and load
balancing programs are relatively very sophisticated and complex to
setup with several pre-requisites and constraints. Such complexity
dictates expensive commercial support and licensing considerations.


* Problem Statement 
A job scheduler or simulation management system was required to address the following:

- Optimum and continuous simulation solver license utilisation by all
  members of the team in a First-In-First-Out (FIFO) basis, 
- Provision for dynamic or urgent priority jobs, as well as an
  interface to submit simulations or view job history.
- Optimisation and management of workload of simulation jobs
  facilitating overall project management and planning.


* What the program accomplished 

- Allowed users to submit simulations by simply placing the input
  files in a particular folder location, which also served as a
  particular priority basket.
- Removed the need of creating manual scripts to submit multiple
  simulations and resolved inefficient license utilisation approaches.
- Facilitated a optimised approach to certain design cases, thus
  resulting in a 75% reduction in simulation time
- Enabled the use of consistent solver and memory utilisation
  parameters and settings, allowing efficient deployment and reducing
  inefficiencies due to errors.
- Allowed optimal or perfect utilisation of available licensing
  scheme, resulting in a significant increase in team output and
  productivity.

* Tools used and links

- Written with Python 2.7, using portable python, Spyder, Notepad ++ and Sublime Text 3.

- See the [Github Wiki](https://github.com/shrysr/jobscheduler/wiki/) for the project goals, algorithm and other details.

- [Code On Github](<https://github.com/shrysr/jobscheduler>)


** sample code

#+BEGIN_SRC python :results output org drawer
import os
a = os.chdir(os.pwd)
print(a)
#+END_SRC

* Archive                                                          :noexport:
CFX Job Scheduler
============

Python scripts for portable, scalable job scheduler with multiple priorities - for ANSYS CFX.

This code was originally developed for my R&D Center  @ *Wilo SE*. A modified (and more generic) version of the same is available here. It is simply meant to fire away simulations, triggered by a scheduler software. (Tested with the free version of *System Scheduler*).

The program basically loops through pre designated folders and lists .def files based on the *last modified* date available in Windows. The system interaction is via BASH scripts created via the Python code.

This is a project in progress, with the goal of becoming a multi-platform job scheduler for ANSYS CFX that has a balance between sophistication and ease of deployment. Current job schedulers are relatively very sophisticated and complex to setup with several pre-requisites. As of now, this program is ideally suited for individuals and small teams, with 1-3 computing clusters working in tandem.

See the Wiki for the project goals, algorithm and other details.
=======
** Python based portable, scalable job scheduler with multiple priorities - for ANSYS CFX.
** Written with Python 2.7, using portable python, spyder, Notepad ++ and Sublime Text 3.
** This is a project in progress, with the goal of becoming a multi-platform job scheduler for ANSYS CFX that has a balance between sophistication and ease of deployment. Current job schedulers are relatively very sophisticated and complex to setup with several pre-requisites. As of now, this program is ideally suited for individuals and small teams, with 1-3 computing clusters working in tandem.

** See the [Wiki](https://github.com/shrysr/jobscheduler/wiki/) for the project goals, algorithm and other details.

** Issues and desired enhancements are listed


Setting up
=====================
** The program doesn't just work out of the box (for now). It needs some manual setting up. However, once setup - it should keep running without any problems.

** A zip file of the folder structure as it is, is provided. It should be downloaded and unzipped to the desired location where the simulations will run and be stored.

** System scheduler install is required, which will launch the python program every minute. This needs to be installed only on the master nodes.

